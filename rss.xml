<rss xmlns:a10="http://www.w3.org/2005/Atom" version="2.0"><channel><title>تکنیکال اِنری</title><link>http://erfannoury.github.io/rss.xml</link><description>تکنیکال اِنری</description><item><guid isPermaLink="true">http://erfannoury.github.io/2014/04/pathfinding-visualization/</guid><link>http://erfannoury.github.io/2014/04/pathfinding-visualization/</link><title>Pathfinding.js, معرفی و نمایش</title><description>&lt;h1&gt;به نام خدا&lt;/h1&gt;

&lt;p&gt;امروز در حین گشت‌و‌گذار میان صفحات با آدرس *.github.io به صفحات جالبی برخوردم. یکی از صفحات مربوط به نمایش امکانات یک کتابخانه‌ی محاسبه‌ی مسیر به زبان جاوااسکریپت بود.
کتابخانه اینطوری توصیف شده:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;A comprehensive path-finding library for grid based games&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://github.com/qiao/PathFinding.js"&gt;اینجا&lt;/a&gt; می‌توانید به کد کتابخانه دسترسی داشته باشید.&lt;/p&gt;

&lt;p&gt;ولی نکته‌ی اصلی که توجهم را جلب کرد، نمایش قابلیت‌های این کتابخانه در &lt;a href="http://qiao.github.io/PathFinding.js/visual/"&gt;این سایت&lt;/a&gt; بود. در این سایت به خوبی نمایشی از نحوه‌ی الگوریتم‌های پیاده‌سازی‌شده در این کتابخانه وجود دارد. حتماً این صفحه را بازدید کنید.&lt;/p&gt;

&lt;p&gt;الگوریتم‌های مسیریابی پیاده‌سازی شده در این کتابخانه:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A*&lt;/li&gt;
&lt;li&gt;IDA*&lt;/li&gt;
&lt;li&gt;BFS&lt;/li&gt;
&lt;li&gt;DFS&lt;/li&gt;
&lt;li&gt;Dijkstra&lt;/li&gt;
&lt;li&gt;Jump Point Search&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src="http://erfannoury.github.io/stylesheets/images/pathfindingjs-visual.png" alt="Pathding.js Visualization" /&gt;&lt;/p&gt;
</description><pubDate>Wed, 16 Apr 2014 19:30:00 Z</pubDate><a10:updated>2014-04-16T19:30:00Z</a10:updated><a10:content type="html">&lt;h1&gt;به نام خدا&lt;/h1&gt;

&lt;p&gt;امروز در حین گشت‌و‌گذار میان صفحات با آدرس *.github.io به صفحات جالبی برخوردم. یکی از صفحات مربوط به نمایش امکانات یک کتابخانه‌ی محاسبه‌ی مسیر به زبان جاوااسکریپت بود.
کتابخانه اینطوری توصیف شده:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;A comprehensive path-finding library for grid based games&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://github.com/qiao/PathFinding.js"&gt;اینجا&lt;/a&gt; می‌توانید به کد کتابخانه دسترسی داشته باشید.&lt;/p&gt;

&lt;p&gt;ولی نکته‌ی اصلی که توجهم را جلب کرد، نمایش قابلیت‌های این کتابخانه در &lt;a href="http://qiao.github.io/PathFinding.js/visual/"&gt;این سایت&lt;/a&gt; بود. در این سایت به خوبی نمایشی از نحوه‌ی الگوریتم‌های پیاده‌سازی‌شده در این کتابخانه وجود دارد. حتماً این صفحه را بازدید کنید.&lt;/p&gt;

&lt;p&gt;الگوریتم‌های مسیریابی پیاده‌سازی شده در این کتابخانه:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A*&lt;/li&gt;
&lt;li&gt;IDA*&lt;/li&gt;
&lt;li&gt;BFS&lt;/li&gt;
&lt;li&gt;DFS&lt;/li&gt;
&lt;li&gt;Dijkstra&lt;/li&gt;
&lt;li&gt;Jump Point Search&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src="http://erfannoury.github.io/stylesheets/images/pathfindingjs-visual.png" alt="Pathding.js Visualization" /&gt;&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://erfannoury.github.io/2014/04/setting-up-sandra-with-github-pages/</guid><link>http://erfannoury.github.io/2014/04/setting-up-sandra-with-github-pages/</link><title>چگونه یک صفحه‌ی گیت‌هاب با استفاده از Sandra.Snow بسازیم؟</title><description>&lt;h1&gt;به نام خدا&lt;/h1&gt;

&lt;h2&gt;آماده‌سازی اولیه‌ی بلاگ&lt;/h2&gt;

&lt;p&gt;در این پست می‌خواهم در مورد نحوه‌ی ساخت یک صفحه‌ی گیت‌هاب (&lt;a href="https://pages.github.com"&gt;Github Pages&lt;/a&gt;) با استفاده از &lt;a href="https://github.com/Sandra/Sandra.Snow"&gt;Sandra.Snow&lt;/a&gt; بنویسم. همین وبلاگی که الان مشاهده می‌کنید با استفاده از این سیستم ساخته شده. چنین سایت‌هایی به صفحات ایستا (Static Webpages) مشهور هستند. در این نوع سایت‌ها، بجز نمایش صفحات، از سمت سرور هیچ عمل خاصی انجام نمی‌گیرد. به همین دلیل هم میزبانی این نوع صفحات بسیار آسان است و به راحتی می‌توان محتوای خوبی با استفاده از این نوع صفحات ایجاد کرد. البته همین ایستا بودن صفحات باعث ایجاد محدودیت‌هایی هم می‌شود ولی می‌توان بعضی از این محدودیت‌ها را با استفاده از امکانات سمت کاربر (Client-side) ایجاد کرد. یک نمونه از این امکانات، نظرگذاری در پست‌ها می‌باشد. یکی از راه‌های پیاده‌سازی نظرگذاری در بسیاری از سایت‌ها، ایجاد یک پایگاه‌داده در سمت سرور و مدیریت این نظرات توسط سرور می‌باشد. راه‌حلی که برای سایت‌های ایستا ایجاد شده است، استفاده از سرویس‌هایی همچون &lt;a href="http://disqus.com/"&gt;Disqus&lt;/a&gt; می‌باشد. سرویس‌هایی اینچنین امکان نظر گذاشتن بر روی صفحات ایستا را فراهم می‌سازند. برای فعال‌سازی این نوع نظرات فقط کافی است یک حساب کاربری در این سایت ایجاد نمایید و شناسه‌ی سایت خود را دریافت کنید. با قراردادن این شناسه در فایل تنظیمات، این امکان در صفحات ایستا ایجاد می‌شود.
امکانات دیگری نیز وجود دارد که تقریباً همه‌ی آنها وابسته به جاوااسکریپت بوده و سمت کاربر هستند. پس به راحتی می‌توان با پیدا کردن کتابخانه‌های جاوااسکریپت، امکانات بیشتری را به صفحات ایستا افزود. البته باید مسئله‌ی حجم صفحات را نیز در نظر گرفت و از سنگین کردن بیtش از حد این صفحات جلوگیری کرد. مثلاً یکی از کتابخانه‌های جاوااسکریپت که در این بلاگ استفاده شده، کتابخانه‌ی &lt;a href="http://mathjax.org"&gt;MathJax&lt;/a&gt; برای نمایش فرمول‌های ریاضی هست.
حالا اگر بخواییم خلاصه‌ای از مراحل ایجاد این بلاگ را بگیم به این صورت خواهد بود:
اول لازمه که پروژه‌ی زیر رو از گیت‌هاب بر روی کامپیوتر خودتون clone کنید:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git clone https://github.com/Sandra/Sandra.Snow.git&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;مرحله‌ی بعد این هست که فایل پروژه‌ با نام &lt;code&gt;Sandra.Snow.sln&lt;/code&gt; که در پوشه‌ی &lt;code&gt;src&lt;/code&gt; قرار دارد را باز کنید. برای اینکار بر روی ویندوز به نرم‌افزار ویژوال‌استودیو نیاز دارید. البته بر روی همه‌ی سیستم‌های عامل می‌توانید از &lt;a href="http://erfannoury.github.io/xamarin.com/studio"&gt;Xamarin Studio&lt;/a&gt; استفاده کنید. در اینجا برای ساخت بلاگ، فقط به پروژه‌ای با نام &lt;code&gt;Snow&lt;/code&gt; نیاز داریم. در تنظیمات این پروژه، در قسمت &lt;code&gt;debug&lt;/code&gt; در قسمت مربوط به &lt;code&gt;Command line arguments&lt;/code&gt; اطلاعات زیر رو وارد کنید:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;config="path/to/Snow/" server=true debug=true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="http://erfannoury.github.io/stylesheets/images/vs-debug.png" alt="Project Settings -&gt; Debug -&gt; Command line arguments" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;path/to/Snow/&lt;/code&gt; آدرس پوشه‌ی &lt;code&gt;Snow&lt;/code&gt; هست که فایل‌های سایت در اون قرار داره. در این پوشه فایل‌های مربوط به تنظیمات صفحات، تنظیمات ظاهر صفحه و همچنین فایل‌های جاوااسکریپت و CSS و عکس‌ها قرار دارند. برای یک نمونه از این نوع پوشه که برای شروع کار آماده است می‌توانید از نمونه‌ای که در &lt;a href="https://github.com/Sandra/Sandra.Snow.SnowTemplate"&gt;این آدرس&lt;/a&gt; قرار دارد استفاده کنید. همچنین نمونه‌ی تغییر یافته برای بلاگ‌های فارسی در &lt;a href="https://github.com/erfannoury/erfannoury.github.io"&gt;این آدرس&lt;/a&gt; قرار دارد. شما فقط به پوشه‌ی &lt;code&gt;Snow&lt;/code&gt; این فایل‌ها نیاز دارید. 
در نهایت فقط کافی است تنظیمات مربوط به فایل &lt;code&gt;snow.config&lt;/code&gt; و در صورت نیاز، فایل‌های &lt;code&gt;*.cshtml&lt;/code&gt; موجود در پوشه‌ی &lt;code&gt;themes/snowbytepersian&lt;/code&gt; و &lt;code&gt;themes/snowbytepersian/_layouts&lt;/code&gt; را تغییر دهید. در این میان مهم‌ترین فایل، فایل &lt;code&gt;default.cshtml&lt;/code&gt; می‌باشد. با تغییر این فایل، بسیاری از تنظیمات شما برقرار می‌شوند.
در فایل‌های موجود در تِمِ snowbytepersian تنظیمات مربوط به جهت درست نمایش متون و همچنین نمایش فرمول‌های ریاضی درج شده‌اند. با بررسی فایل‌های ذکر شده می‌توانید تنظیمات دلخواه خود را اعمال کنید.&lt;/p&gt;

&lt;p&gt;در نهایت بعد از کامپایل کردن پروژه‌ی ذکر شده در ابتدای پست، در صورتی که آدرس پوشه‌ی &lt;code&gt;Snow&lt;/code&gt; را به درستی داده باشید، سایت شما ایجاد شده و یک سرور برای نمایش محلی شما ایجاد می‌شود. بعد از اینکه کار ساخت فایل‌های سایت شما به اتمام رسید، می‌تواند با &lt;code&gt;push&lt;/code&gt; کردن در پروژه‌ی صفحه‌ی گیت‌هاب بر روی گیتهاب، سایت خود را آماده کنید.&lt;/p&gt;

&lt;h2&gt;در مورد صفحه‌ی گیت‌هاب&lt;/h2&gt;

&lt;p&gt;برای داشتن یک صفحه‌ی گیت‌هاب در سایت Github لازم است یک پروژه با نام &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt; در گیت‌هاب ایجاد نمایید. &lt;code&gt;&amp;lt;username&amp;gt;&lt;/code&gt; نام کاربری شما در گیت‌هاب می‌باشد. در نهایت با &lt;code&gt;push&lt;/code&gt; کردن فایل‌های ایستای بلاگتان در این پروژه، بلاگ ایستای شما در آدرسی به نام پروژه‌تان ایجاد خواهد شد.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git push -u origin master
&lt;/code&gt;&lt;/pre&gt;
</description><pubDate>Wed, 16 Apr 2014 19:30:00 Z</pubDate><a10:updated>2014-04-16T19:30:00Z</a10:updated><a10:content type="html">&lt;h1&gt;به نام خدا&lt;/h1&gt;

&lt;h2&gt;آماده‌سازی اولیه‌ی بلاگ&lt;/h2&gt;

&lt;p&gt;در این پست می‌خواهم در مورد نحوه‌ی ساخت یک صفحه‌ی گیت‌هاب (&lt;a href="https://pages.github.com"&gt;Github Pages&lt;/a&gt;) با استفاده از &lt;a href="https://github.com/Sandra/Sandra.Snow"&gt;Sandra.Snow&lt;/a&gt; بنویسم. همین وبلاگی که الان مشاهده می‌کنید با استفاده از این سیستم ساخته شده. چنین سایت‌هایی به صفحات ایستا (Static Webpages) مشهور هستند. در این نوع سایت‌ها، بجز نمایش صفحات، از سمت سرور هیچ عمل خاصی انجام نمی‌گیرد. به همین دلیل هم میزبانی این نوع صفحات بسیار آسان است و به راحتی می‌توان محتوای خوبی با استفاده از این نوع صفحات ایجاد کرد. البته همین ایستا بودن صفحات باعث ایجاد محدودیت‌هایی هم می‌شود ولی می‌توان بعضی از این محدودیت‌ها را با استفاده از امکانات سمت کاربر (Client-side) ایجاد کرد. یک نمونه از این امکانات، نظرگذاری در پست‌ها می‌باشد. یکی از راه‌های پیاده‌سازی نظرگذاری در بسیاری از سایت‌ها، ایجاد یک پایگاه‌داده در سمت سرور و مدیریت این نظرات توسط سرور می‌باشد. راه‌حلی که برای سایت‌های ایستا ایجاد شده است، استفاده از سرویس‌هایی همچون &lt;a href="http://disqus.com/"&gt;Disqus&lt;/a&gt; می‌باشد. سرویس‌هایی اینچنین امکان نظر گذاشتن بر روی صفحات ایستا را فراهم می‌سازند. برای فعال‌سازی این نوع نظرات فقط کافی است یک حساب کاربری در این سایت ایجاد نمایید و شناسه‌ی سایت خود را دریافت کنید. با قراردادن این شناسه در فایل تنظیمات، این امکان در صفحات ایستا ایجاد می‌شود.
امکانات دیگری نیز وجود دارد که تقریباً همه‌ی آنها وابسته به جاوااسکریپت بوده و سمت کاربر هستند. پس به راحتی می‌توان با پیدا کردن کتابخانه‌های جاوااسکریپت، امکانات بیشتری را به صفحات ایستا افزود. البته باید مسئله‌ی حجم صفحات را نیز در نظر گرفت و از سنگین کردن بیtش از حد این صفحات جلوگیری کرد. مثلاً یکی از کتابخانه‌های جاوااسکریپت که در این بلاگ استفاده شده، کتابخانه‌ی &lt;a href="http://mathjax.org"&gt;MathJax&lt;/a&gt; برای نمایش فرمول‌های ریاضی هست.
حالا اگر بخواییم خلاصه‌ای از مراحل ایجاد این بلاگ را بگیم به این صورت خواهد بود:
اول لازمه که پروژه‌ی زیر رو از گیت‌هاب بر روی کامپیوتر خودتون clone کنید:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git clone https://github.com/Sandra/Sandra.Snow.git&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;مرحله‌ی بعد این هست که فایل پروژه‌ با نام &lt;code&gt;Sandra.Snow.sln&lt;/code&gt; که در پوشه‌ی &lt;code&gt;src&lt;/code&gt; قرار دارد را باز کنید. برای اینکار بر روی ویندوز به نرم‌افزار ویژوال‌استودیو نیاز دارید. البته بر روی همه‌ی سیستم‌های عامل می‌توانید از &lt;a href="http://erfannoury.github.io/xamarin.com/studio"&gt;Xamarin Studio&lt;/a&gt; استفاده کنید. در اینجا برای ساخت بلاگ، فقط به پروژه‌ای با نام &lt;code&gt;Snow&lt;/code&gt; نیاز داریم. در تنظیمات این پروژه، در قسمت &lt;code&gt;debug&lt;/code&gt; در قسمت مربوط به &lt;code&gt;Command line arguments&lt;/code&gt; اطلاعات زیر رو وارد کنید:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;config="path/to/Snow/" server=true debug=true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="http://erfannoury.github.io/stylesheets/images/vs-debug.png" alt="Project Settings -&gt; Debug -&gt; Command line arguments" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;path/to/Snow/&lt;/code&gt; آدرس پوشه‌ی &lt;code&gt;Snow&lt;/code&gt; هست که فایل‌های سایت در اون قرار داره. در این پوشه فایل‌های مربوط به تنظیمات صفحات، تنظیمات ظاهر صفحه و همچنین فایل‌های جاوااسکریپت و CSS و عکس‌ها قرار دارند. برای یک نمونه از این نوع پوشه که برای شروع کار آماده است می‌توانید از نمونه‌ای که در &lt;a href="https://github.com/Sandra/Sandra.Snow.SnowTemplate"&gt;این آدرس&lt;/a&gt; قرار دارد استفاده کنید. همچنین نمونه‌ی تغییر یافته برای بلاگ‌های فارسی در &lt;a href="https://github.com/erfannoury/erfannoury.github.io"&gt;این آدرس&lt;/a&gt; قرار دارد. شما فقط به پوشه‌ی &lt;code&gt;Snow&lt;/code&gt; این فایل‌ها نیاز دارید. 
در نهایت فقط کافی است تنظیمات مربوط به فایل &lt;code&gt;snow.config&lt;/code&gt; و در صورت نیاز، فایل‌های &lt;code&gt;*.cshtml&lt;/code&gt; موجود در پوشه‌ی &lt;code&gt;themes/snowbytepersian&lt;/code&gt; و &lt;code&gt;themes/snowbytepersian/_layouts&lt;/code&gt; را تغییر دهید. در این میان مهم‌ترین فایل، فایل &lt;code&gt;default.cshtml&lt;/code&gt; می‌باشد. با تغییر این فایل، بسیاری از تنظیمات شما برقرار می‌شوند.
در فایل‌های موجود در تِمِ snowbytepersian تنظیمات مربوط به جهت درست نمایش متون و همچنین نمایش فرمول‌های ریاضی درج شده‌اند. با بررسی فایل‌های ذکر شده می‌توانید تنظیمات دلخواه خود را اعمال کنید.&lt;/p&gt;

&lt;p&gt;در نهایت بعد از کامپایل کردن پروژه‌ی ذکر شده در ابتدای پست، در صورتی که آدرس پوشه‌ی &lt;code&gt;Snow&lt;/code&gt; را به درستی داده باشید، سایت شما ایجاد شده و یک سرور برای نمایش محلی شما ایجاد می‌شود. بعد از اینکه کار ساخت فایل‌های سایت شما به اتمام رسید، می‌تواند با &lt;code&gt;push&lt;/code&gt; کردن در پروژه‌ی صفحه‌ی گیت‌هاب بر روی گیتهاب، سایت خود را آماده کنید.&lt;/p&gt;

&lt;h2&gt;در مورد صفحه‌ی گیت‌هاب&lt;/h2&gt;

&lt;p&gt;برای داشتن یک صفحه‌ی گیت‌هاب در سایت Github لازم است یک پروژه با نام &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt; در گیت‌هاب ایجاد نمایید. &lt;code&gt;&amp;lt;username&amp;gt;&lt;/code&gt; نام کاربری شما در گیت‌هاب می‌باشد. در نهایت با &lt;code&gt;push&lt;/code&gt; کردن فایل‌های ایستای بلاگتان در این پروژه، بلاگ ایستای شما در آدرسی به نام پروژه‌تان ایجاد خواهد شد.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git push -u origin master
&lt;/code&gt;&lt;/pre&gt;
</a10:content></item><item><guid isPermaLink="true">http://erfannoury.github.io/2014/04/first-post/</guid><link>http://erfannoury.github.io/2014/04/first-post/</link><title>اولین پست، ولی آزمایشی</title><description>&lt;h1&gt;به نام خدا&lt;/h1&gt;

&lt;p&gt;این یک آزمایش است.&lt;/p&gt;

&lt;p&gt;This is only a test.&lt;/p&gt;

&lt;p&gt;بعد از اینکه  دیدم سایت &lt;a href="http://erfannoury.github.io/www.koding.com"&gt;Koding&lt;/a&gt; داون شد، دیدم که مطمئن‌ترین جا برای نوشتن این پست‌ها، همین کامپیوتر خودم هست. بخاطر همین هم Octopress و Jekyll رو کلاً انداختم کنار و رو آوردم به the real thing، یعنی .Net :دی&lt;/p&gt;

&lt;p&gt;الان دارم از یک نسخه‌ی تغییر یافته از پروژه‌ی &lt;a href="https://github.com/Sandra/Sandra.Snow"&gt;Sandra.Snow&lt;/a&gt; استفاده می‌کنم. بعضی تغییرات رو توش اعمال کردم تا کلاً بلاگ برای نمایش فارسی بهتر بشه. البته از کد جاوااسکریپ &lt;a href="https://github.com/hasenj/bidiweb"&gt;bidiweb&lt;/a&gt; هم استفاده کردم تا متونی که احیاناً بخاطر تغییر زبان به هم بریزن رو درست بکنه. همچنین از کتابخونه‌ی خیلی خوب &lt;a href="http://mathjax.org"&gt;MathJax&lt;/a&gt; هم برای نمایش \(\LaTeX\) استفاده کردم. بعضی وقتا شاید به درد بخورن. &lt;/p&gt;

&lt;p&gt;حالا یکم قابلیت‌هایش رو تست بکنیم.&lt;/p&gt;

&lt;p&gt;This is a text written in English, and yes it is displayed correctly (not that it wouldn't normally :D)&lt;/p&gt;

&lt;p&gt;این هم یه تیکه کد:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;using System;

public class test
{
    public static void Main(string[] args)
    {
        Console.WriteLine("Hello World, from Sandra.Snow!");
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;و حالا یکم ریاضی درون یک نوشته‌ی انگلیسی&lt;/p&gt;

&lt;p&gt;When \(a \ne 0\), there are two solutions to \(ax^2 + bx + c = 0\) and they are
$$x = {-b \pm \sqrt{b^2-4ac} \over 2a}.$$&lt;/p&gt;

&lt;p&gt;و همون پاراگراف قبلی به صورت یک پاراگراف فارسی&lt;/p&gt;

&lt;p&gt;هرگاه \(a \ne 0\)، دو پاسخ برای معادله‌ی \(ax^2 + bx + c = 0\) داریم که برابر هستند با:
$$ x_{1,2} = \frac{-b \pm \sqrt{b^2 - 4ac}}{2 a}$$.&lt;/p&gt;

&lt;p&gt;و همین دیگه. امیدوارم اونطوری که می‌خوام بتونم بنویسم اینجا و برای خودم و دیگران هم مفید باشه.&lt;/p&gt;

&lt;p&gt;تا پستِ بعدی :)&lt;/p&gt;
</description><pubDate>Tue, 15 Apr 2014 19:30:00 Z</pubDate><a10:updated>2014-04-15T19:30:00Z</a10:updated><a10:content type="html">&lt;h1&gt;به نام خدا&lt;/h1&gt;

&lt;p&gt;این یک آزمایش است.&lt;/p&gt;

&lt;p&gt;This is only a test.&lt;/p&gt;

&lt;p&gt;بعد از اینکه  دیدم سایت &lt;a href="http://erfannoury.github.io/www.koding.com"&gt;Koding&lt;/a&gt; داون شد، دیدم که مطمئن‌ترین جا برای نوشتن این پست‌ها، همین کامپیوتر خودم هست. بخاطر همین هم Octopress و Jekyll رو کلاً انداختم کنار و رو آوردم به the real thing، یعنی .Net :دی&lt;/p&gt;

&lt;p&gt;الان دارم از یک نسخه‌ی تغییر یافته از پروژه‌ی &lt;a href="https://github.com/Sandra/Sandra.Snow"&gt;Sandra.Snow&lt;/a&gt; استفاده می‌کنم. بعضی تغییرات رو توش اعمال کردم تا کلاً بلاگ برای نمایش فارسی بهتر بشه. البته از کد جاوااسکریپ &lt;a href="https://github.com/hasenj/bidiweb"&gt;bidiweb&lt;/a&gt; هم استفاده کردم تا متونی که احیاناً بخاطر تغییر زبان به هم بریزن رو درست بکنه. همچنین از کتابخونه‌ی خیلی خوب &lt;a href="http://mathjax.org"&gt;MathJax&lt;/a&gt; هم برای نمایش \(\LaTeX\) استفاده کردم. بعضی وقتا شاید به درد بخورن. &lt;/p&gt;

&lt;p&gt;حالا یکم قابلیت‌هایش رو تست بکنیم.&lt;/p&gt;

&lt;p&gt;This is a text written in English, and yes it is displayed correctly (not that it wouldn't normally :D)&lt;/p&gt;

&lt;p&gt;این هم یه تیکه کد:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;using System;

public class test
{
    public static void Main(string[] args)
    {
        Console.WriteLine("Hello World, from Sandra.Snow!");
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;و حالا یکم ریاضی درون یک نوشته‌ی انگلیسی&lt;/p&gt;

&lt;p&gt;When \(a \ne 0\), there are two solutions to \(ax^2 + bx + c = 0\) and they are
$$x = {-b \pm \sqrt{b^2-4ac} \over 2a}.$$&lt;/p&gt;

&lt;p&gt;و همون پاراگراف قبلی به صورت یک پاراگراف فارسی&lt;/p&gt;

&lt;p&gt;هرگاه \(a \ne 0\)، دو پاسخ برای معادله‌ی \(ax^2 + bx + c = 0\) داریم که برابر هستند با:
$$ x_{1,2} = \frac{-b \pm \sqrt{b^2 - 4ac}}{2 a}$$.&lt;/p&gt;

&lt;p&gt;و همین دیگه. امیدوارم اونطوری که می‌خوام بتونم بنویسم اینجا و برای خودم و دیگران هم مفید باشه.&lt;/p&gt;

&lt;p&gt;تا پستِ بعدی :)&lt;/p&gt;
</a10:content></item></channel></rss>